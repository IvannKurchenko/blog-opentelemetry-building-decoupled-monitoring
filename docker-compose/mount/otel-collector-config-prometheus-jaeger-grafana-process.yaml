# This OTEL collector configuration file that aims is to extend initial setup and export telemetry data additionally to
# Grafana stack backend services. In particular, they are:
# - Metrics are exported to Prometheus and Grafana Agent;
# - Traces are exported to Jaeger and Grafana Agent;
# - Logs are exported to Grafana Agent;
# It exposes a single OTLP receiver for this purpose.

# Additionally to extended number of backends to send data to, it also includes possibility

# Receivers' configuration section
# See for more details following documentation: https://opentelemetry.io/docs/collector/configuration/#receivers
receivers:
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:4418

# Processors' configuration section
# See fore more details following documentation: https://opentelemetry.io/docs/collector/configuration/#processors
processors:
  # Data sources: traces, metrics, logs
  memory_limiter:
    check_interval: 1s
    limit_mib: 4000
    spike_limit_mib: 500

  # Filter HTTP spans to server for `GET /health` requests because of spam.
  # See documentation for more details:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/filterprocessor
  filter/exclude-health-api-traces:
    error_mode: ignore
    traces:
      span:
        - 'attributes["http.route"] == "/health"'

  # Filter logs for `GET /health` requests logs because of spam.
  # Log line body to filter example: `Health check API invoked!`
  # See documentation for more details:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/filterprocessor
  filter/exclude-health-api-logs:
    logs:
      exclude:
        match_type: regexp
        bodies:
          - '.*Health check API invoked!.*'

  # Add environment attribute to all telemetry signals.
  # See documentation for more details:
  # https://opentelemetry.io/docs/collector/transforming-telemetry/#adding-or-deleting-attributes
  attributes/add-environment:
    actions:
      - key: environment
        value: development
        action: insert

# Exporters' configuration section
# See for more details following documentation: https://opentelemetry.io/docs/collector/configuration/#exporters
# Important note: exporter name patter is following - `{protocol}/{exporter_name}`.
# `exporter_name` is optional in general case, however, it must be added if there are multiple exporters using the same protocol.
exporters:
  # Data sources: traces
  otlphttp/jaeger:
    endpoint: http://jaeger:4318

  otlphttp/grafana-agent:
    endpoint: http://grafana-agent:4318

  # Data sources: metrics
  prometheus:
    endpoint: 0.0.0.0:9094
    namespace: products_service

# Services configuration section
# See for more details following documentation: https://opentelemetry.io/docs/collector/configuration/#services
service:
  pipelines:
    traces:
      receivers:
        - otlp
      processors:
        - memory_limiter
        - filter/exclude-health-api-traces
        - attributes/add-environment
      exporters:
        - otlphttp/jaeger
        - otlphttp/grafana-agent
    metrics:
      receivers:
        - otlp
      processors:
        - memory_limiter
        - attributes/add-environment
      exporters:
        - prometheus
        - otlphttp/grafana-agent
    logs:
      receivers:
        - otlp
      processors:
        - memory_limiter
        - filter/exclude-health-api-logs
        - attributes/add-environment
      exporters:
        - otlphttp/grafana-agent
