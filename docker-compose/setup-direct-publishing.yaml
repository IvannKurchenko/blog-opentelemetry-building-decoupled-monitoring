# Docker compose to demonstrate direct publishing of metrics and traces to monitoring backend.
# Run with the following command: docker-compose -f docker-compose/setup-direct-publishing.yaml up -d
version: "3.9"
services:
  elasticsearch:
    extends:
      file: common-environment.yaml
      service: elasticsearch
    hostname: elasticsearch
    networks:
      - products

  postgres:
    extends:
      file: common-environment.yaml
      service: postgres
    hostname: postgres
    networks:
      - products

  jaeger:
    extends:
      file: common-monitoring-prometheus-jeager.yml
      service: jaeger
    hostname: jaeger
    networks:
      - products

  prometheus:
    extends:
      file: common-monitoring-prometheus-jeager.yml
      service: prometheus
    hostname: prometheus
    networks:
      - products

  products-service:
    extends:
      file: common-products-service.yaml
      service: products-service
    depends_on:
      - postgres
      - elasticsearch
    hostname: products-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/products
      - SPRING_DATASOURCE_USERNAME=products_user
      - SPRING_DATASOURCE_PASSWORD=products_password
      - SPRING_ELASTICSEARCH_REST_URI=elasticsearch:9200
      - OTEL_SERVICE_NAME=products_service
      - OTEL_METRICS_EXPORTER=prometheus
      - OTEL_EXPORTER_PROMETHEUS_PORT=9094
      - OTEL_EXPORTER_PROMETHEUS_HOST=0.0.0.0
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
    ports:
      - "10001:10001"
      - "9094:9094"
    networks:
      - products

networks:
  products: